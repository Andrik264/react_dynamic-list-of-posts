{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","a","fetch","response","ok","status","statusText","Error","json","ALL_POSTS_URL","USER_POSTS_URL","userId","getPostDetails","postId","PostsList","selectedUser","selectedPostId","onPostSelect","useState","userPosts","setUserPosts","useEffect","getUserPosts","then","loadedPosts","catch","error","className","map","post","title","type","onClick","id","NewCommentForm","addNewComment","name","email","body","newComment","setNewComment","handleChange","propName","propValue","updatedComment","method","onSubmit","event","preventDefault","comment","Math","random","createdAt","Date","updatedAt","placeholder","value","onChange","target","getPostComments","PostDetails","postDetails","setPostDetails","postComments","setPostComments","areCommentsVisible","setCommentsVisibility","loadData","Promise","all","comments","deleteComment","useCallback","commentId","updatedComments","filter","existingComments","includes","verifyUniqueCommentId","length","App","selecteduUserId","setSelectedUserId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85ed9c4b.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function request(url: string) {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    const { status, statusText } = response;\n\n    throw new Error(`${status} - ${statusText}`);\n  }\n\n  return response.json();\n}\n","import { BASE_URL, request } from './api';\n\nconst ALL_POSTS_URL = `${BASE_URL}/posts`;\nconst USER_POSTS_URL = (userId: number): string => `${ALL_POSTS_URL}?userId=${userId}`;\n\nexport async function getUserPosts(userId: number) {\n  return request(userId > 0\n    ? USER_POSTS_URL(userId)\n    : ALL_POSTS_URL);\n}\n\nexport async function getPostDetails(postId: number) {\n  return request(`${ALL_POSTS_URL}/${postId}`);\n}\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\nimport { Post } from '../../types/post';\n\ntype Props = {\n  selectedUser: number;\n  selectedPostId: number | null;\n  onPostSelect: (arg0: number) => void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  selectedUser,\n  selectedPostId,\n  onPostSelect,\n}) => {\n  const [userPosts, setUserPosts] = useState<Post[] | []>([]);\n\n  useEffect(() => {\n    getUserPosts(selectedUser)\n      .then(loadedPosts => setUserPosts(loadedPosts))\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, [selectedUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n        {userPosts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]\n                :&nbsp;\n              </b>\n\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => onPostSelect(post.id)}\n            >\n              {selectedPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { Comment } from '../../types/comment';\n\ninterface NewComment {\n  name: string;\n  email: string;\n  body: string;\n}\n\ntype Props = {\n  addNewComment: (args0: Comment) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  addNewComment,\n}) => {\n  const [newComment, setNewComment] = useState<NewComment>({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const handleChange = (propName: string, propValue: string) => {\n    const updatedComment = {\n      ...newComment,\n      [propName]: propValue,\n    };\n\n    setNewComment(updatedComment);\n  };\n\n  const submitNewComment = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const comment = {\n      ...newComment,\n      id: Math.random(),\n      postId: Math.random() + 1,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    addNewComment(comment);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      method=\"POST\"\n      onSubmit={submitNewComment}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={newComment.name}\n          onChange={({ target: { name, value } }) => handleChange(name, value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={newComment.email}\n          onChange={({ target: { name, value } }) => handleChange(name, value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={newComment.body}\n          onChange={({ target: { name, value } }) => handleChange(name, value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { BASE_URL, request } from './api';\n\nexport async function getPostComments(postId: number) {\n  return request(`${BASE_URL}/comments?postId=${postId}`);\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Post } from '../../types/post';\nimport { Comment } from '../../types/comment';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nfunction verifyUniqueCommentId(\n  existingComments: Comment[],\n  newComment: Comment,\n): boolean {\n  const existingIds = existingComments.map(({ id }) => id);\n\n  return !existingIds.includes(newComment.id);\n}\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [postComments, setPostComments] = useState<Comment[] | []>([]);\n  const [areCommentsVisible, setCommentsVisibility] = useState<boolean>(true);\n\n  useEffect(() => {\n    const loadData = async () => Promise.all([\n      getPostDetails(selectedPostId),\n      getPostComments(selectedPostId),\n    ]);\n\n    loadData().then(([post, comments]) => {\n      setPostDetails(post);\n      setPostComments(comments);\n    });\n  }, [selectedPostId]);\n\n  const deleteComment = useCallback((commentId: number) => {\n    const updatedComments = postComments.filter(({ id }) => id !== commentId);\n\n    setPostComments(updatedComments);\n  }, [postComments]);\n\n  const addNewComment = useCallback((newComment: Comment) => {\n    if (!verifyUniqueCommentId(postComments, newComment)) {\n      const updatedComment = {\n        ...newComment,\n        id: newComment.id + 1,\n      };\n\n      addNewComment(updatedComment);\n    } else {\n      setPostComments([newComment, ...postComments]);\n    }\n  }, [postComments]);\n\n  return postDetails && (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails.body}</p>\n      </section>\n\n      {postComments.length && (\n        <>\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setCommentsVisibility(!areCommentsVisible)}\n            >\n              {areCommentsVisible ? 'Hide' : 'Show'}\n              &nbsp;\n              {postComments.length}\n              {' '}\n              comments\n            </button>\n\n            {areCommentsVisible && (\n              <ul className=\"PostDetails__list\" data-cy=\"postDetails\">\n                {postComments.map(comment => (\n                  <li className=\"PostDetails__list-item\" key={comment.id}>\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm addNewComment={addNewComment} />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [selecteduUserId, setSelectedUserId] = useState<number>(0);\n  const [selectedPostId, setSelectedPostId] = useState<number | null>(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={\n              (event) => setSelectedUserId(+event.target.value)\n            }\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUser={selecteduUserId}\n            selectedPostId={selectedPostId}\n            onPostSelect={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && <PostDetails selectedPostId={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}